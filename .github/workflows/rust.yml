name: Rust

on:
  pull_request:

env:
  CARGO_INCREMENTAL: 0 # disable incremental compilation
  RUSTFLAGS: "-D warnings -D unused_extern_crates"
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CARGO_PROFILE_DEV_DEBUG: 0

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      proc_macros: ${{ steps.filter.outputs.proc_macros }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@1441771bbfdd59dcd748680ee64ebd8faab1a242
        id: filter
        with:
          filters: |
            proc_macros:
              - 'crates/proc-macro-api/**'
              - 'crates/proc-macro-srv/**'
              - 'crates/proc-macro-srv-cli/**'
  rust:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # macos-latest
    # Add "id-token" for google jwt
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: install nightly toolchain
        run: |
          rustup update --no-self-update nightly
          rustup default nightly
          rustup component add --toolchain nightly rustfmt rust-src clippy

      # inspired by https://matklad.github.io/2021/09/04/fast-rust-builds.html#CI-Workflow
      - name: cache deps
        uses: Swatinem/rust-cache@9bdad043e88c75890e36ad3bbc8d27f0090dd609
        with:
          key: ${{ env.RUST_CHANNEL }}

      - name: compile (tests)
        run: cargo test --no-run --locked

        # It's faster to `test` before `build` ¯\_(ツ)_/¯
      - name: compile (workspace)
        if: matrix.os == 'ubuntu-latest'
        run: cargo build --quiet

      # faucet tests with google KMS
      - name: google auth
        uses: "google-github-actions/auth@v2"
        with:
          project_id: "telcoin-network"
          workload_identity_provider: "projects/505253602811/locations/global/workloadIdentityPools/github/providers/github-provider"
        if: matrix.os == 'ubuntu-latest' || github.event_name == 'push'

      - name: run tests
        if: matrix.os == 'ubuntu-latest' || github.event_name == 'push'
        run: cargo test --workspace --no-default-features --features faucet -- --nocapture --quiet

      - name: clippy
        run: |
          rustc --version
          cargo +nightly version
          cargo +nightly clippy --version
          cargo +nightly clippy --verbose --all --all-features -- -D warnings

      - name: fmt
        run: |
          rustc --version
          cargo +nightly version
          cargo +nightly fmt --verbose -- --check
