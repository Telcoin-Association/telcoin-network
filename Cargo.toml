[workspace]
members = [
    "bin/telcoin-network",

    # consensus
    "crates/consensus/types",
    "crates/consensus/consensus-metrics",
    "crates/consensus/executor",
    "crates/consensus/mem-utils",
    "crates/consensus/mem-utils-derive",
    "crates/consensus/network",
    "crates/consensus/network-types",
    "crates/consensus/tn-node",
    "crates/consensus/primary",
    "crates/consensus/storage",
    "crates/consensus/telcoin-macros",
    "crates/consensus/telcoin-sync",
    "crates/consensus/test-utils",
    "crates/consensus/typed-store",
    "crates/consensus/worker",
    "crates/consensus/primary-metrics",

    # execution
    "crates/execution/batch-maker",
    "crates/execution/batch-validator",
    "crates/execution/faucet",
    "crates/execution/engine",
]

# Explicitly set the resolver to version 2, which is the default for packages with edition >= 2021
# https://doc.rust-lang.org/edition-guide/rust-2021/default-cargo-resolver.html
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2021"
rust-version = "1.79"                                     # Remember to update .clippy.toml and README.md
license = "MIT OR Apache-2.0"
homepage = "https://telcoin.network"
repository = "https://github.com/telcoin/telcoin-network"
exclude = [".github/"]

[workspace.lints]

[workspace.dependencies]
# misc
clap = "4"
eyre = "0.6"
futures = "0.3.26"
tokio = { version = "1.21", default-features = false }
tracing = "0.1.0"
pin-project = "1.0.12"
metrics = "0.23.0" # Needed for `metrics-macro` to resolve the crate using `::metrics` notation
serde_json = "1.0.94"
humantime-serde = "1.1"
fdlimit = "0.3.0"
enr = { version = "0.12.1", default-features = false, features = [
    "k256",
    "rust-secp256k1",
] }

# crypto
secp256k1 = { version = "0.29", default-features = false, features = [
    "global-context",
    "rand-std",
    "recovery",
] }

# execution
#reth = { path = "../reth/bin/reth" }
#reth-primitives = { path = "../reth/crates/primitives" }
#reth-chainspec = { path = "../reth/crates/chainspec" }
#reth-tracing = { path = "../reth/crates/tracing" }
#reth-config = { path = "../reth/crates/config" }
#reth-db = { path = "../reth/crates/storage/db" }
#reth-db-common = { path = "../reth/crates/storage/db-common" }
#reth-downloaders = { path = "../reth/crates/net/downloaders" }
#reth-evm-ethereum = { path = "../reth/crates/ethereum/evm" }
#reth-evm-config = { path = "../reth/crates/evm-config" }
#reth-network = { path = "../reth/crates/net/network" }
#reth-network-api = { path = "../reth/crates/net/network-api" }
#reth-network-p2p = { path = "../reth/crates/net/p2p" }
#reth-network-peers = { path = "../reth/crates/net/peers" }
#reth-prune = { path = "../reth/crates/prune/prune" }
#reth-evm = { path = "../reth/crates/evm" }
#reth-execution-types = { path = "../reth/crates/evm/execution-types" }
#reth-revm = { path = "../reth/crates/revm" }
#reth-exex = { path = "../reth/crates/exex/exex" }
#reth-rpc = { path = "../reth/crates/rpc/rpc" }
#reth-rpc-types = { path = "../reth/crates/rpc/rpc-types" }
#reth-rpc-types-compat = { path = "../reth/crates/rpc/rpc-types-compat" }
#reth-payload-primitives = { path = "../reth/crates/payload/primitives" }
#reth-rpc-engine-api = { path = "../reth/crates/rpc/rpc-engine-api" }
#reth-provider = { path = "../reth/crates/storage/provider" }
#reth-snapshot = { path = "../reth/crates/snapshot" }
#reth-stages = { path = "../reth/crates/stages/stages" }
#reth-static-file = { path = "../reth/crates/static-file/static-file" }
#reth-tasks = { path = "../reth/crates/tasks" }
#reth-transaction-pool = { path = "../reth/crates/transaction-pool" }
#reth-consensus = { path = "../reth/crates/consensus/consensus" }
#reth-auto-seal-consensus = { path = "../reth/crates/consensus/auto-seal" }
#reth-beacon-consensus = { path = "../reth/crates/consensus/beacon" }
#reth-blockchain-tree = { path = "../reth/crates/blockchain-tree" }
#reth-tokio-util = { path = "../reth/crates/tokio-util" }
#reth-node-api = { path = "../reth/crates/node/api" }
#reth-node-builder = { path = "../reth/crates/node/builder" }
#reth-node-core = { path = "../reth/crates/node/core" }
#reth-node-ethereum = { path = "../reth/crates/ethereum/node" }
#reth-node-events = { path = "../reth/crates/node/events" }
#reth-discv4 = { path = "../reth/crates/net/discv4" }
#reth-ethereum-payload-builder = { path = "../reth/crates/ethereum/payload" }
#reth-eth-wire = { path = "../reth/crates/net/eth-wire" }
#reth-metrics = { path = "../reth/crates/metrics" }
#reth-cli-util = { path = "../reth/crates/cli/util" }
#reth-cli-commands = { path = "../reth/crates/cli/commands" }
#reth-payload-builder = { path = "../reth/crates/payload/builder" }
#reth-basic-payload-builder = { path = "../reth/crates/payload/basic" }
#reth-errors = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }

reth = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-primitives = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-chainspec = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-tracing = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-config = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-db = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-db-common = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-downloaders = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-evm-ethereum = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-evm-config = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-network = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-network-api = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-network-p2p = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-network-peers = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-prune = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-evm = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-execution-types = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-revm = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-exex = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-rpc = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-rpc-types = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-rpc-types-compat = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-payload-primitives = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-rpc-engine-api = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-provider = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-snapshot = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-stages = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-static-file = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-tasks = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-transaction-pool = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-consensus = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-auto-seal-consensus = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-beacon-consensus = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-blockchain-tree = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-tokio-util = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-node-api = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-node-builder = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-node-core = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-node-ethereum = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-node-events = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-discv4 = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-ethereum-payload-builder = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-eth-wire = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-metrics = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-cli-util = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-cli-commands = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-payload-builder = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-basic-payload-builder = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-errors = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-libmdbx = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-trie = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }
reth-execution-errors = { git = "https://github.com/paradigmxyz/reth", tag = "v1.0.6" }

revm = { version = "14.0.0", features = [
    "std",
    "secp256k1",
    "blst",
], default-features = false }
revm-primitives = { version = "9.0", features = [
    "std",
], default-features = false }

# eth
alloy = { version = "0.3.1", features = ["full"] }
alloy-rlp = "0.3.4"

tn-batch-validator = { path = "crates/execution/batch-validator" }
tn-engine = { path = "crates/execution/engine" }

# batch maker
tn-batch-maker = { path = "crates/execution/batch-maker" }
futures-util = "0.3.25"
jsonrpsee = { version = "0.24" }
assert_matches = { version = "1.5.0" }

# common
tn-types = { path = "./crates/consensus/types" }
tn-node = { path = "./crates/consensus/tn-node" }

# optional
tn-faucet = { path = "./crates/execution/faucet" }

# consensus
narwhal-executor = { path = "./crates/consensus/executor" }
narwhal-network = { path = "./crates/consensus/network" }
narwhal-worker = { path = "./crates/consensus/worker" }
narwhal-typed-store = { path = "./crates/consensus/typed-store" }
narwhal-storage = { path = "./crates/consensus/storage" }
narwhal-primary = { path = "./crates/consensus/primary" }
narwhal-test-utils = { path = "./crates/consensus/test-utils" }
narwhal-network-types = { path = "./crates/consensus/network-types" }
consensus-metrics = { path = "./crates/consensus/consensus-metrics" }
narwhal-primary-metrics = { path = "./crates/consensus/primary-metrics" }
telcoin-sync = { path = "./crates/consensus/telcoin-sync" }
telcoin-macros = { path = "./crates/consensus/telcoin-macros" }
mem-utils = { path = "./crates/consensus/mem-utils" }
mem-utils-derive = { path = "./crates/consensus/mem-utils-derive" }

# misc
fastcrypto = { git = "https://github.com/MystenLabs/fastcrypto", rev = "802c1ac98061687d6ce024849c747a250dbeea52" }
fastcrypto-tbls = { git = "https://github.com/MystenLabs/fastcrypto", rev = "802c1ac98061687d6ce024849c747a250dbeea52" }
match_opt = "0.1.2"
serde = { version = "^1.0", features = ["derive", "rc"] }
serde_repr = "0.1"
rand = "0.8.5"
rand_chacha = "0.3.1"
thiserror = "1.0.50"
tempfile = "3.3.0"
bcs = "0.1.4"
bincode = "1.3.3"
proptest = "1.5.0"
proptest-derive = "0.4"
serde-reflection = "0.3.6"
indexmap = { version = "1.9.2", features = ["serde"] }
itertools = "0.10.5"
once_cell = "1.18.0"
prometheus = "0.13.3"
tonic = { version = "0.10", features = ["transport", "tls"] }
async-trait = "0.1.61"
dashmap = "6.0.1"
parking_lot = "0.12.3"
scopeguard = "1.1"
tap = "1.0.1"
uuid = { version = "1.1.2", features = ["v4", "fast-rng"] }
mockall = "0.11.4"
quinn-proto = "0.10.5"
base64 = "0.21.2"
derive_builder = "0.12.0"
enum_dispatch = "0.3"
roaring = "0.10.1"
serde_with = { version = "2.1.0", features = ["hex"] }
collectable = "0.0.2"
hdrhistogram = "7.5.1"
ouroboros = "0.17"
proc-macro2 = "1.0.47"
quote = "1.0.23"
rstest = "0.16.0"
syn = { version = "2.0", features = ["full", "derive", "extra-traits"] }
uint = "0.9.5"
cfg-if = "1.0.0"
governor = "0.6.0"
arc-swap = { version = "1.5.1", features = ["serde"] }
lru = "0.10"
tokio-stream = { version = "0.1.14", features = ["sync", "net"] }
serde_yaml = "0.8.26"
byteorder = "1.4.3"
rustversion = "1.0.9"
protobuf = { version = "2.28", features = ["with-bytes"] }
bytes = "1.4.0"
anyhow = "1.0.71"
multiaddr = "0.17"
humantime = "2.1.0"

criterion = { version = "0.5.0", features = [
    "async",
    "async_tokio",
    "html_reports",
] }

reqwest = { version = "0.12", default-features = false, features = [
    "blocking",
    "json",
    "rustls-tls",
] }

axum = { version = "0.6.6", default-features = false, features = [
    "headers",
    "tokio",
    "http1",
    "http2",
    "json",
    "matched-path",
    "original-uri",
    "form",
    "query",
    "ws",
] }

axum-server = { version = "0.5.1", default-features = false, features = [
    "tls-rustls",
] }

tower = { version = "0.4.12", features = [
    "full",
    "util",
    "timeout",
    "load-shed",
    "limit",
] }

backoff = { version = "0.4.0", features = [
    "futures",
    "futures-core",
    "pin-project-lite",
    "tokio",
    "tokio_1",
] }

anemo = { git = "https://github.com/mystenlabs/anemo.git", rev = "1169850e6af127397068cd86764c29b1d49dbe35" }
anemo-build = { git = "https://github.com/mystenlabs/anemo.git", rev = "1169850e6af127397068cd86764c29b1d49dbe35" }
anemo-cli = { git = "https://github.com/mystenlabs/anemo.git", rev = "1169850e6af127397068cd86764c29b1d49dbe35" }
anemo-tower = { git = "https://github.com/mystenlabs/anemo.git", rev = "1169850e6af127397068cd86764c29b1d49dbe35" }
tikv-jemallocator = "0.5.4"

[patch.crates-io]
alloy-sol-type-parser = { git = "https://github.com/alloy-rs/core", commit = "6bd4aeddc899c7649c2ce9be383fd5a3d4c0b691" }
